# /etc/nginx/nginx.conf
user  nginx;
worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # === Rate limiting (HTTP scope) ===
    # 50 req/s на IP, очередь (burst) 100
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=50r/s;

    # === Gzip (HTTP scope) ===
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_types text/css application/javascript application/json image/svg+xml;
    gzip_vary on;

    # (опционально) если есть модуль brotli:
    # brotli on;
    # brotli_comp_level 5;
    # brotli_types text/css application/javascript application/json image/svg+xml;

    # === Виртуальные хосты ===

    # HTTP -> HTTPS
    server {
        listen 80;
        server_name myapp.local;
        return 301 https://$server_name$request_uri;
    }

    # HTTPS
    server {
        listen 443 ssl http2;
        server_name myapp.local;

        # --- TLS ---
        ssl_certificate     /etc/letsencrypt/live/myapp.local/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/myapp.local/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        # Современные шифры (достаточно для LE/OpenSSL 1.1+)
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:
                     ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:
                     ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
        ssl_prefer_server_ciphers on;

        # OCSP stapling (ускоряет и повышает надёжность TLS)
        ssl_stapling on;
        ssl_stapling_verify on;
        # обычно подходит этот путь для LE, уточни для своей системы:
        ssl_trusted_certificate /etc/letsencrypt/live/myapp.local/chain.pem;

        # --- Безопасность (заголовки) ---
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=()" always;
        add_header Cross-Origin-Opener-Policy "same-origin" always;

        # --- Лимиты и буферы ---
        client_max_body_size 1m;

        # --- Rate limit на локации (server scope) ---
        limit_req zone=mylimit burst=100 nodelay;

        # === Статика ===
        # ВАЖНО: проверь путь к проекту на сервере:
        location /assets/ {
            alias /path/to/myApp/web/assets/;
            try_files $uri =404;

            # Кэшируем на год (immutable)
            expires 1y;
            add_header Cache-Control "public, immutable" always;
        }

        # favicon (если держишь иконку рядом со статикой)
        location = /favicon.ico {
            alias /path/to/myApp/web/assets/favicon.ico;
            try_files $uri =404;
            expires 7d;
            add_header Cache-Control "public, max-age=604800" always;
        }

        # === CORS для API ===
        # Лучше ограничить домен(ы), чем '*'
        set $cors_origin "";
        if ($http_origin ~* ^https?://(trusted\.domain\.com|another\.trusted\.com)$) {
            set $cors_origin $http_origin;
        }

        location /api/ {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin "$cors_origin" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
                add_header Access-Control-Allow-Credentials "true" always;
                add_header Vary "Origin" always;
                return 204;
            }

            add_header Access-Control-Allow-Origin "$cors_origin" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Vary "Origin" always;

            proxy_pass http://127.0.0.1:8080;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # таймауты (подумай над своими значениями)
            proxy_read_timeout  30s;
            proxy_send_timeout  30s;
            proxy_connect_timeout 5s;
        }

        # === Все прочие запросы → Go-приложение ===
        location / {
            proxy_pass http://127.0.0.1:8080;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_read_timeout  30s;
            proxy_send_timeout  30s;
            proxy_connect_timeout 5s;
        }

        # === Healthcheck (локальный доступ) ===
        location /healthz {
            allow 127.0.0.1;
            deny all;

            proxy_pass http://127.0.0.1:8080;
            proxy_set_header Host $host;
        }
    }
}

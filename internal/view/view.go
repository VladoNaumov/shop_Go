package view

import (
	"fmt"
	"html/template"
	"net/http"

	"myApp/internal/core"

	"github.com/gorilla/csrf"
)

// üîß –®–∞–±–ª–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (View Layer)

// –≠—Ç–æ—Ç –ø–∞–∫–µ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ä–∞–±–æ—Ç—É —Å HTML-—à–∞–±–ª–æ–Ω–∞–º–∏:
//  ‚Ä¢ –ø–∞—Ä—Å–∏–Ω–≥ (–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤)
//  ‚Ä¢ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å—Ç—Ä–∞–Ω–∏—Ü
//  ‚Ä¢ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ CSRF-—Ç–æ–∫–µ–Ω–∞ –∏ CSP nonce –¥–ª—è –∑–∞—â–∏—Ç—ã

// üß© Templates ‚Äî —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –≤—Å–µ—Ö HTML-—à–∞–±–ª–æ–Ω–æ–≤ –≤ –ø–∞–º—è—Ç–∏
type Templates struct {
	templates map[string]*template.Template // –∫–ª—é—á ‚Äî –∏–º—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
}

// üì¶ PageData ‚Äî —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–∞—è –≤ —à–∞–±–ª–æ–Ω—ã
type PageData struct {
	Title     string        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
	CSRFField template.HTML // –°–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ <input> —Å CSRF-—Ç–æ–∫–µ–Ω–æ–º
	Nonce     string        // CSP nonce ‚Äî —Å–ª—É—á–∞–π–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è –∑–∞—â–∏—Ç—ã inline-—Å–∫—Ä–∏–ø—Ç–æ–≤
	Data      interface{}   // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ (—Ñ–æ—Ä–º—ã, —Ç–æ–≤–∞—Ä—ã –∏ —Ç.–¥.)
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —à–∞–±–ª–æ–Ω–æ–≤

// New ‚Äî –ø–∞—Ä—Å–∏—Ç layout, partials –∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–æ—Ç–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É Templates —Å–æ –≤—Å–µ–º–∏ —à–∞–±–ª–æ–Ω–∞–º–∏.
func New() (*Templates, error) {
	// –û–±—â–∏–µ layout –∏ —á–∞—Å—Ç–∏—á–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–∫–ª—é—á–∞—é—Ç—Å—è –∫–æ –≤—Å–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
	layouts := []string{
		"web/templates/layouts/base.gohtml",
		"web/templates/partials/nav.gohtml",
		"web/templates/partials/footer.gohtml",
	}

	// –ö–∞—Ä—Ç–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –∏ –∏—Ö —Ñ–∞–π–ª–æ–≤
	pages := map[string][]string{
		"home":     {"web/templates/pages/home.gohtml"},
		"about":    {"web/templates/pages/about.gohtml"},
		"form":     {"web/templates/pages/form.gohtml"},
		"catalog":  {"web/templates/pages/catalog.gohtml"},
		"product":  {"web/templates/pages/show_product.gohtml"},
		"notfound": {"web/templates/pages/404.gohtml"},
	}

	// –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤—Å–µ—Ö —à–∞–±–ª–æ–Ω–æ–≤
	t := &Templates{templates: make(map[string]*template.Template)}

	// –ü–∞—Ä—Å–∏–º –∫–∞–∂–¥—ã–π —à–∞–±–ª–æ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤–º–µ—Å—Ç–µ —Å layout
	for name, pageFiles := range pages {
		files := append(layouts, pageFiles...)
		tpl, err := template.ParseFiles(files...)
		if err != nil {
			return nil, fmt.Errorf("–æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —à–∞–±–ª–æ–Ω–∞ %s: %w", name, err)
		}
		t.templates[name] = tpl
	}

	return t, nil
}

// üé® –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ HTML-—à–∞–±–ª–æ–Ω–æ–≤

// Render ‚Äî –±–µ–∑–æ–ø–∞—Å–Ω–æ –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç HTML-—à–∞–±–ª–æ–Ω –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç CSRF –∏ CSP-–∑–∞—â–∏—Ç—É.
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤—Å–µ–º–∏ HTTP-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ (handlers).
func (t *Templates) Render(
	w http.ResponseWriter,
	r *http.Request,
	templateName string, // –∏–º—è —à–∞–±–ª–æ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "home" –∏–ª–∏ "form")
	title string, // –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
	data interface{}, // –ª—é–±—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
) error {

	// 1Ô∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω—É–∂–Ω—ã–π —à–∞–±–ª–æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
	tpl, ok := t.templates[templateName]
	if !ok {
		core.LogError("–®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω", map[string]interface{}{
			"template": templateName,
		})
		core.Fail(w, r, core.Internal("–®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω", nil))
		return fmt.Errorf("—à–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω: %s", templateName)
	}

	// 2Ô∏è –ò–∑–≤–ª–µ–∫–∞–µ–º CSP nonce (–æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π —Ç–æ–∫–µ–Ω) –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞
	//    –û–Ω –Ω—É–∂–µ–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –±—Ä–∞—É–∑–µ—Ä –≤—ã–ø–æ–ª–Ω—è–ª —Ç–æ–ª—å–∫–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ inline-—Å–∫—Ä–∏–ø—Ç—ã
	nonce, _ := r.Context().Value(core.CtxNonce).(string)
	if nonce == "" {
		core.LogError("Nonce –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ", nil)
		core.Fail(w, r, core.Internal("–û—à–∏–±–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏", nil))
		return fmt.Errorf("nonce –Ω–µ –Ω–∞–π–¥–µ–Ω")
	}

	// 3Ô∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ Content-Type
	w.Header().Set("Content-Type", "text/html; charset=utf-8")

	// 4Ô∏è –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–µ –≤ —à–∞–±–ª–æ–Ω
	page := PageData{
		Title:     title,
		CSRFField: csrf.TemplateField(r), // –¥–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä—ã—Ç—ã–π CSRF <input>
		Nonce:     nonce,                 // –ø–µ—Ä–µ–¥–∞—ë–º CSP nonce
		Data:      data,                  // –ª—é–±—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
	}

	// 5Ô∏è –†–µ–Ω–¥–µ—Ä–∏–º —à–∞–±–ª–æ–Ω base, –≤ –∫–æ—Ç–æ—Ä—ã–π –≤–ª–æ–∂–µ–Ω—ã partials –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
	if err := tpl.ExecuteTemplate(w, "base", page); err != nil {
		core.LogError("–û—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —à–∞–±–ª–æ–Ω–∞", map[string]interface{}{
			"template": templateName,
			"error":    err.Error(),
		})
		core.Fail(w, r, core.Internal("–û—à–∏–±–∫–∞ —à–∞–±–ª–æ–Ω–∞", err))
		return fmt.Errorf("—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —à–∞–±–ª–æ–Ω–∞ %s: %w", templateName, err)
	}

	return nil // –í—Å—ë –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
}

// üß† –ö—Ä–∞—Ç–∫–æ –æ —Ç–æ–º, –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
//
// 1. –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞ ‚Üí –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è view.New(), —à–∞–±–ª–æ–Ω—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –≤ –ø–∞–º—è—Ç—å.
// 2. –ö–∞–∂–¥—ã–π handler –≤—ã–∑—ã–≤–∞–µ—Ç tpl.Render(w, r, "–∏–º—è", "–∑–∞–≥–æ–ª–æ–≤–æ–∫", data).
// 3. Render –¥–æ–±–∞–≤–ª—è–µ—Ç:
//      - CSRF-—Ç–æ–∫–µ–Ω (gorilla/csrf)
//      - CSP nonce (–¥–ª—è –∑–∞—â–∏—Ç—ã inline-—Å–∫—Ä–∏–ø—Ç–æ–≤)
//      - –ó–∞–≥–æ–ª–æ–≤–æ–∫ Content-Type
// 4. –®–∞–±–ª–æ–Ω "base.gohtml" –ø–æ–ª—É—á–∞–µ—Ç PageData –∏ –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç:
//      {{ .Title }}        ‚Üí –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
//      {{ .CSRFField }}    ‚Üí <input type="hidden" name="_csrf" ...>
//      {{ .Nonce }}        ‚Üí nonce –≤ meta-—Ç–µ–≥–∞—Ö CSP (.Nonce ‚Äî —ç—Ç–æ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π —Ç–æ–∫–µ–Ω (random string), –∫–æ—Ç–æ—Ä—ã–π –≤—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤ HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç XSS-–∞—Ç–∞–∫).
//      {{ .Data }}         ‚Üí —Ç–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ (—Ñ–æ—Ä–º–∞, —Ç–æ–≤–∞—Ä—ã –∏ —Ç.–¥.)

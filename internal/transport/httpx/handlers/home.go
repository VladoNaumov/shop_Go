package handlers

// HTML-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫:
// SSR –¥–ª—è –≥–ª–∞–≤–Ω–æ–π: Route -> (—ç—Ç–æ—Ç "–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä") -> Template.
// –®–∞–±–ª–æ–Ω—ã –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º —á–µ—Ä–µ–∑ embed, —á—Ç–æ–±—ã –Ω–µ –ª–æ–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã glob/—Å–ª–µ—à–µ–π –Ω–∞ Windows.

import (
	"html/template"
	"net/http"
)

// –í—Å—Ç—Ä–∞–∏–≤–∞–µ–º —à–∞–±–ª–æ–Ω—ã –ø–æ –ø–∞–ø–∫–∞–º (–±–µ–∑ **).
// –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—É—Ç–∏ –∑–∞–¥–∞–Ω—ã –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞.
var (
	tpl = template.Must(template.ParseFiles(
		"web/templates/layouts/base.gohtml",
		"web/templates/partials/nav.gohtml",
		"web/templates/partials/footer.gohtml",
		"web/templates/pages/home.gohtml",
	))
)

// –í –Ω–µ—ë –∫–ª–∞–¥—É—Ç—Å—è –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Ç–æ–º –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ HTML-—à–∞–±–ª–æ–Ω (.tmpl).
// üí° –¢–æ –µ—Å—Ç—å —ç—Ç–æ –∫–∞–∫ ¬´–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –¥–ª—è —à–∞–±–ª–æ–Ω–∞¬ª.
type HomeViewsModel struct {
	Title   string
	Message string
}

// –•–µ–Ω–¥–ª–µ—Ä –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–∞–Ω–∞–ª–æ–≥ HomeController@index)
// http.ResponseWriter ‚Äî –∫—É–¥–∞ –ø–∏—Å–∞—Ç—å –æ—Ç–≤–µ—Ç (HTML, JSON, —Ç–µ–∫—Å—Ç –∏ —Ç.–¥.);
func HomeIndex(w http.ResponseWriter, r *http.Request) {

	// –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —à–∞–±–ª–æ–Ω–∞
	vm := HomeViewsModel{
		Title:   "–ì–ª–∞–≤–Ω–∞—è",
		Message: "–≠—Ç–æ —Å—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞. SSR –Ω–∞ html/template + chi.",
	}
	// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
	w.Header().Set("Content-Type", "text/html; charset=utf-8")

	// –†–µ–Ω–¥–µ—Ä–∏–º layout "base"; –≤–Ω—É—Ç—Ä–∏ –æ–Ω –≤—Å—Ç–∞–≤–∏—Ç –±–ª–æ–∫ {{block "content"}} –∏–∑ pages/home.tmpl
	if err := tpl.ExecuteTemplate(w, "base", vm); err != nil {
		http.Error(w, "template error", http.StatusInternalServerError)
	}
}
